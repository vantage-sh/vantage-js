/*
 * Vantage
 * Vantage API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@vantage.sh
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient";

/**
* Ping service.
* @module Vantage/Vantage/PingApi
* @version 1.0.0
*/
export class PingApi {

    /**
    * Constructs a new PingApi. 
    * @alias module:Vantage/Vantage/PingApi
    * @class
    * @param {module:Vantage/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:Vantage/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * This is a health check endpoint that can be used to determine Vantage API healthiness. It will return 200 if everything is running smoothly.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Object} and HTTP response
     */
    pingWithHttpInfo() {
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/v1/ping', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * This is a health check endpoint that can be used to determine Vantage API healthiness. It will return 200 if everything is running smoothly.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Object}
     */
    ping() {
      return this.pingWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
