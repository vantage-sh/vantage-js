/*
 * Vantage
 * Vantage API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@vantage.sh
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/Vantage/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/Vantage/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Vantage);
  }
}(this, function(expect, Vantage) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Vantage.CostsApi();
  });

  describe('Vantage', function() {
    describe('CostsApi', function() {
      describe('getCosts', function() {
        it('should call getCosts successfully', function(done) {
          // TODO: uncomment, update parameter values for getCosts call and complete the assertions
          /*
          var reportId = "reportId_example";
          var opts = {};
          opts.startDate = "startDate_example";
          opts.endDate = "endDate_example";
          opts.page = 56;
          opts.limit = 56;

          instance.getCosts(reportId, opts).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(Vantage.Costs);
            expect(data.links).to.be.a(Object);
            // expect(data.links).to.be();
            expect(data.total).to.be.a('string');
            // expect(data.total).to.be("");
            expect(data.currency).to.be.a('string');
            // expect(data.currency).to.be("");
            {
              let dataCtr = data.costs;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Vantage.Cost);
                expect(data.accruedAt).to.be.a('string');
                // expect(data.accruedAt).to.be("2021-04-01");
                expect(data.amount).to.be.a('string');
                // expect(data.amount).to.be("4.25");
                expect(data.provider).to.be.a('string');
                // expect(data.provider).to.be("AWS");
                expect(data.service).to.be.a('string');
                // expect(data.service).to.be("Amazon Elastic Compute Cloud - Compute");
              }
            }

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getReport', function() {
        it('should call getReport successfully', function(done) {
          // TODO: uncomment, update parameter values for getReport call and complete the assertions
          /*
          var reportId = "reportId_example";

          instance.getReport(reportId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(Vantage.Report);
            expect(data.id).to.be.a('string');
            // expect(data.id).to.be("");
            expect(data.title).to.be.a('string');
            // expect(data.title).to.be("Production Environment");
            expect(data.earliestCostDate).to.be.a('string');
            // expect(data.earliestCostDate).to.be("2021-07-09T00:00:00Z");
            expect(data.latestCostDate).to.be.a('string');
            // expect(data.latestCostDate).to.be("2021-07-09T00:00:00Z");
            expect(data.createdAt).to.be.a('string');
            // expect(data.createdAt).to.be("2021-07-09T00:00:00Z");
            expect(data.workspace).to.be.a('string');
            // expect(data.workspace).to.be("");

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getReports', function() {
        it('should call getReports successfully', function(done) {
          // TODO: uncomment, update parameter values for getReports call and complete the assertions
          /*
          var opts = {};
          opts.page = 56;
          opts.limit = 56;

          instance.getReports(opts).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(Vantage.Reports);
            expect(data.links).to.be.a(Object);
            // expect(data.links).to.be();
            {
              let dataCtr = data.reports;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(Vantage.Report);
                expect(data.id).to.be.a('string');
                // expect(data.id).to.be("");
                expect(data.title).to.be.a('string');
                // expect(data.title).to.be("Production Environment");
                expect(data.earliestCostDate).to.be.a('string');
                // expect(data.earliestCostDate).to.be("2021-07-09T00:00:00Z");
                expect(data.latestCostDate).to.be.a('string');
                // expect(data.latestCostDate).to.be("2021-07-09T00:00:00Z");
                expect(data.createdAt).to.be.a('string');
                // expect(data.createdAt).to.be("2021-07-09T00:00:00Z");
                expect(data.workspace).to.be.a('string');
                // expect(data.workspace).to.be("");
              }
            }

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
